:PROPERTIES:
:ID: cab02e40-98f3-4baa-b375-be8736ceb88a
:END:
#+TITLE: Denotational Design

[[file:..][..]]

*Denotational Design* is a strong approach to software design applicable to ML languages like Haskell, Elm, F# and OCaml.

I was first introduced to Denotaional Design when I watched a talk by [[http://conal.net/][Conal Elliot]]:

#+begin_export html
<iframe width="784" height="441" src="https://www.youtube-nocookie.com/embed/bmKYiUOEo2A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
#+end_export

https://www.youtube.com/watch?v=bmKYiUOEo2A ([[http://conal.net/talks/denotational-design-lambdajam-2015.pdf][slides]])

Some references:

- [[http://conal.net/papers/type-class-morphisms/][Denotational design with type class morphisms]] - paper by Conal Elliot
- [[https://ericnormand.me/podcast/why-do-i-like-denotational-design][Why do I like Denotational Design?]] - video by Eric Normand
