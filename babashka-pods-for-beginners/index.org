:PROPERTIES:
:ID: 11092c41-79bf-4aed-86c2-16df0848fef4
:END:
#+TITLE: Babashka pods for beginners

[[file:..][..]]

* Babashka pods: Wrap any library, use it from Clojure

Motivation: Babashka pods are a mechanism to build functionality in any language, and expose those features in Clojure.
You can build a high performance numerics library in Rust, and use it from Clojure.
Or wrap around some nice existing library.

I read [[https://book.babashka.org/#pods][the section on pods in the babashka book]] and [[https://github.com/babashka/pods][the babashka pods README]], and still didn't feel like everything made sense.
So, why not write the introduction that I would have wanted.

/Q: give me a minimal example of pods/

Sure.
Here are the moving pieces:

1. Your program
2. The =babashka/babashka.pods= library
3. A pod

/Q: what is a pod?/

An executable program that takes commands on stdin, and prints results to stdout.

/Q: what kind of commands on stdin?/

There are three commands: /describe/, /invoke/ and /shutdown/.

/Q: what do they do?/

- describe :: list of provided namespaces, and provided vars for each namespace.
- invoke :: invoke a function
- shutdown :: stop any processes the pod is running

/Q: that doesn't sound too complicated!/

I thought it was way more complicated too!
But that's it, really.
You write an application in some language, and follow a convention for stdin and stdout.

/Q: But ... I might want to use stdin and stdout for other things./

Yup!
When the babashka pods library starts your executable, it sets the environment variable =BABASHKA_POD= to =true=.
So you can default to your normal behavior otherwise.
For a practical example, see [[https://github.com/rorokimdim/stash/blob/f07f90316531cb0b3eafaa481ab72b8ca59525f6/app/Main.hs#L957-L962][rorokimdim's stash]] or [[https://github.com/justone/tabl/blob/6de881ff75db1a7325fa4ec429c98ce8d055c309/src/app/main.clj#L119-L127][justone's tabl]].

* What's bencode?

Here are some examples:

#+INCLUDE: "explore/src/explore/bencode_examples.clj" src clojure

But there's a caveat.
I'm cheating!
I'm pretending all binary data is serializable, and all strings are UTF-8.

That's enough for us for now.
If you want do dig further into bencode, read [[https://en.wikipedia.org/wiki/Bencode][the Bencode Wikipedia page]] and the [[https://github.com/nrepl/bencode/blob/4286ceef3cc7e9531b8e1650d0a1ff243b150dcd/test/bencode/core_test.clj#L57-L91][nrepl/bencode tests]].

* Why do we need bencode?


* .

[[http://localhost:9945/babashka-pods-for-beginners/][local preview]] | [[https://play.teod.eu/babashka-pods-for-beginners/][view on the web]]

#+BEGIN_VERSE















#+END_VERSE
