:PROPERTIES:
:ID: 8e72c536-9881-4477-8670-24c78edd82e7
:END:
#+TITLE: Literature Notes

[[file:..][..]]

Commentary on other people's websites :)

* https://prog21.dadgum.com
** Why?
We seem to have very similar perspectives on programming.
That idea construction / information logistics might have to take the front seat over implementation.
** Some quick links
| Programming Without Being Obsessed With Programming | https://prog21.dadgum.com/195.html |
| You Don't Read Code, You Explore It                 | https://prog21.dadgum.com/194.html |
| Get Good at Idea Generation                         | https://prog21.dadgum.com/193.html |
| Organizational Skills Beat Algorithmic Wizardry     | https://prog21.dadgum.com/177.html |
| Hopefully More Controversial Programming Opinions   | https://prog21.dadgum.com/149.html |
** Hopefully More Controversial Programming Opinions
#+begin_quote
It's a mistake to introduce new programmers to OOP before they understand the
basics of breaking down problems and turning the solutions into code.
#+end_quote

I think that's right.
* http://theworstthingsforsale.com/
| Two Hundred Seventy Five Gallons Of Lube | http://theworstthingsforsale.com/2022/07/12/two-hundred-seventy-five-gallons-of-lube/ |

Man.
* https://ideolalia.com/
** https://ideolalia.com/essays/two-concepts-of-legibility.html
legibility definitions:

1. Coercive legibility.
   A state requires people to follow rules.
2. Legibility as an affordance.
   Usable complex systems have built-in discovery mechanisms.

| coercive legibility         | https://en.wikipedia.org/wiki/Seeing_Like_a_State   |
| legibility as an affordance | https://en.wikipedia.org/wiki/The_Image_of_the_City |

Here on play.teod.eu, I try to embrace chaos, /then/ solve for attention design and discoverability.
