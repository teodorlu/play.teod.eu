{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Nextjournal Markdown: A First Look", :emoji nil, :path "#nextjournal-markdown:-a-first-look", :items []}], :nextjournal/render-opts {:toc-visibility false, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility false, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns nextjournal-markdown-a-first-look), :file "nextjournal_markdown_a_first_look.clj", :scope nextjournal-markdown-a-first-look, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil nil [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/teodorlu/play.teod.eu/blob/11a6b8eddf58443b8f0b23ed9434ed9a188a12c5/nextjournal-markdown-a-first-look/nextjournal_markdown_a_first_look.clj"} "nextjournal_markdown_a_first_look.clj" [:<> "@" [:span.tabular-nums "11a6b8e"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Nextjournal Markdown: A First Look", :description "Nextjournal Markdown is a new Markdown parser for Clojure. It has some appealing properties:"}, :title "Nextjournal Markdown: A First Look", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "nextjournal-markdown-a-first-look/markdown-5duDoSrJW4pJ2YubENVSvvW9uGxmdR"} ["h1" {:id "nextjournal-markdown:-a-first-look"} [:<> "Nextjournal Markdown: A First Look"]] [:p [:a {:href "https://github.com/nextjournal/markdown"} [:<> "Nextjournal Markdown"]] [:<> " is a new Markdown parser for Clojure."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "It has some appealing properties:"]] [:ul [:li [:<> [:<> "A pure data intermediate representation (like Hiccup and Ring)"]]] [:li [:<> [:<> "Supports Babashka, and ships with Babashka ðŸ”¥"]]] [:li [:<> [:<> "Parses CommonMark, the closest we've got to an official Markdown spec."]]]] [:p [:<> "To explore, I set myself the following task:"]] [:ol [:li [:<> [:<> "Demonstrate finding some markdown and parsing it with babashka fs and nextjournal markdown"]]] [:li [:<> [:<> "Then create some HTML files"]]] [:li [:<> [:<> "Then render."]]]]], :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/markdown-5duDoSrJW4pJ2YubENVSvvW9uGxmdR"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ns nextjournal-markdown-a-first-look\n  (:require [babashka.fs :as fs]\n            [nextjournal.clerk :as clerk]\n            [nextjournal.markdown :as md]))", :nextjournal/render-opts {:loc {:line 14, :end-line 17, :column 1, :end-column 44}, :id "nextjournal-markdown-a-first-look/anon-expr-5dsfVN9zWEhn1YHVRHbxWgpKhkj7Em-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(md/parse \"# Markdown, OHOI! â›µ\")", :nextjournal/render-opts {:loc {:line 19, :end-line 20, :column 1, :end-column 33}, :id "nextjournal-markdown-a-first-look/anon-expr-5dshXBHHGUR9DPhuqcd5VspdWcYqBL-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :content, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value [{:path [1 0 1 0], :nextjournal/value [{:path [1 0 1 0 0], :nextjournal/value [{:path [1 0 1 0 0 0], :nextjournal/value :attrs, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 0 1], :nextjournal/value [{:path [1 0 1 0 0 1 0], :nextjournal/value [{:path [1 0 1 0 0 1 0 0], :nextjournal/value :id, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 0 1 0 1], :nextjournal/value "markdown,-ohoi!-â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 0 1 0 1], :nextjournal/value [{:path [1 0 1 0 1 0], :nextjournal/value :content, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 1 1], :nextjournal/value [{:path [1 0 1 0 1 1 0], :nextjournal/value [{:path [1 0 1 0 1 1 0 0], :nextjournal/value [{:path [1 0 1 0 1 1 0 0 0], :nextjournal/value :text, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 1 1 0 0 1], :nextjournal/value "Markdown, OHOI! â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 0 1 0 1 1 0 1], :nextjournal/value [{:path [1 0 1 0 1 1 0 1 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 1 1 0 1 1], :nextjournal/value :text, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}" "]"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 0 1 0 2], :nextjournal/value [{:path [1 0 1 0 2 0], :nextjournal/value :heading-level, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 2 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 0 1 0 3], :nextjournal/value [{:path [1 0 1 0 3 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1 0 3 1], :nextjournal/value :heading, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}" "]"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :footnotes, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 2], :nextjournal/value [{:path [1 2 0], :nextjournal/value :title, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 2 1], :nextjournal/value "Markdown, OHOI! â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3], :nextjournal/value [{:path [1 3 0], :nextjournal/value :toc, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1], :nextjournal/value [{:path [1 3 1 0], :nextjournal/value [{:path [1 3 1 0 0], :nextjournal/value :children, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1], :nextjournal/value [{:path [1 3 1 0 1 0], :nextjournal/value [{:path [1 3 1 0 1 0 0], :nextjournal/value [{:path [1 3 1 0 1 0 0 0], :nextjournal/value :attrs, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 0 1], :nextjournal/value [{:path [1 3 1 0 1 0 0 1 0], :nextjournal/value [{:path [1 3 1 0 1 0 0 1 0 0], :nextjournal/value :id, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 0 1 0 1], :nextjournal/value "markdown,-ohoi!-â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 0 1 0 1], :nextjournal/value [{:path [1 3 1 0 1 0 1 0], :nextjournal/value :content, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 1 1], :nextjournal/value [{:path [1 3 1 0 1 0 1 1 0], :nextjournal/value [{:path [1 3 1 0 1 0 1 1 0 0], :nextjournal/value [{:path [1 3 1 0 1 0 1 1 0 0 0], :nextjournal/value :text, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 1 1 0 0 1], :nextjournal/value "Markdown, OHOI! â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 0 1 0 1 1 0 1], :nextjournal/value [{:path [1 3 1 0 1 0 1 1 0 1 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 1 1 0 1 1], :nextjournal/value :text, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}" "]"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 0 1 0 2], :nextjournal/value [{:path [1 3 1 0 1 0 2 0], :nextjournal/value :heading-level, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 2 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 0 1 0 3], :nextjournal/value [{:path [1 3 1 0 1 0 3 0], :nextjournal/value :path, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 3 1], :nextjournal/value [{:path [1 3 1 0 1 0 3 1 0], :nextjournal/value :content, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 3 1 1], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 0 1 0 4], :nextjournal/value [{:path [1 3 1 0 1 0 4 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 0 1 0 4 1], :nextjournal/value :toc, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}" "]"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 3 1 1], :nextjournal/value [{:path [1 3 1 1 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 3 1 1 1], :nextjournal/value :toc, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 4], :nextjournal/value [{:path [1 4 0], :nextjournal/value :type, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 4 1], :nextjournal/value :doc, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:auto-expand-results? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dshXBHHGUR9DPhuqcd5VspdWcYqBL-result-1"}}, :nextjournal/blob-id "5duCWoeMfawTvjRmabCEgrTpTpaGAJ"}, :nextjournal/render-opts {:auto-expand-results? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dshXBHHGUR9DPhuqcd5VspdWcYqBL-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "nextjournal-markdown-a-first-look/markdown-5drHgZmjDBUa3YpuyZf1kmrEsxeEJd"} [:p [:<> "I'm seeing:"]] [:ul [:li [:<> [:<> "A toplevel map with metadata"]]] [:li [:<> [:<> "A tree in :content that looks like Hiccup when I squint."]]]] [:p [:<> "Let's try make some HTML (Hiccup) out of this."]]], :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/markdown-5drHgZmjDBUa3YpuyZf1kmrEsxeEJd"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(try (-> \"# Markdown, OHOI! â›µ\" md/parse md/->hiccup)\n     (catch Exception e\n       (clerk/fragment (clerk/md \"Something went wrong!\")\n                       e)))", :nextjournal/render-opts {:loc {:line 27, :end-line 30, :column 1, :end-column 28}, :id "nextjournal-markdown-a-first-look/anon-expr-5dqs6rovfutfaGNZWKcSH6TzW7VX1b-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "Something went wrong!"]]], :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}, :nextjournal/render-opts {:fragment-item? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dqs6rovfutfaGNZWKcSH6TzW7VX1b-result-1"}}, :nextjournal/blob-id "5dsEiM7gFcRPKTxUpEET4ayDtSGq16"}, :nextjournal/render-opts {:fragment-item? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dqs6rovfutfaGNZWKcSH6TzW7VX1b-result-1"}, :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}} {:path [2], :nextjournal/value {:nextjournal/presented {:path [2], :nextjournal/value {:via [{:type java.lang.ClassCastException, :message "class clojure.lang.PersistentHashMap cannot be cast to class java.lang.String (clojure.lang.PersistentHashMap is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')", :at [nextjournal.markdown.impl$parse invokeStatic "impl.clj" 284]}], :trace [["nextjournal.markdown.impl/parse" invokeStatic "impl.clj" 284] ["nextjournal.markdown.impl/parse" invoke "impl.clj" 282] ["nextjournal.markdown/parse*" invokeStatic "markdown.cljc" 18] ["nextjournal.markdown/parse*" invoke "markdown.cljc" 10] ["nextjournal.markdown/parse" invokeStatic "markdown.cljc" 28] ["nextjournal.markdown/parse" invoke "markdown.cljc" 20] ["nextjournal.markdown/parse" invokeStatic "markdown.cljc" 26] ["nextjournal.markdown/parse" invoke "markdown.cljc" 20] ["nextjournal.markdown/->hiccup" invokeStatic "markdown.cljc" 49] ["nextjournal.markdown/->hiccup" invoke "markdown.cljc" 46] ["nextjournal.markdown/->hiccup" invokeStatic "markdown.cljc" 48] ["nextjournal.markdown/->hiccup" invoke "markdown.cljc" 46] ["nextjournal-markdown-a-first-look/eval32304" invokeStatic "nextjournal_markdown_a_first_look.clj" 1] ["nextjournal-markdown-a-first-look/eval32304" invoke "nextjournal_markdown_a_first_look.clj" 27] ["clojure.lang.Compiler" eval "Compiler.java" 7700] ["clojure.lang.Compiler" eval "Compiler.java" 7655] ["clojure.core/eval" invokeStatic "core.clj" 3232] ["clojure.core/eval" invoke "core.clj" 3228] ["nextjournal.clerk.eval/eval+cache!/fn--26525/fn--26526" invoke "eval.clj" 130] ["clojure.core/with-redefs-fn" invokeStatic "core.clj" 7706] ["clojure.core/with-redefs-fn" invoke "core.clj" 7690] ["nextjournal.clerk.eval/eval+cache!/fn--26525" invoke "eval.clj" 129] ["nextjournal.clerk.eval/eval+cache!" invokeStatic "eval.clj" 127] ["nextjournal.clerk.eval/eval+cache!" invoke "eval.clj" 124] ["nextjournal.clerk.eval/read+eval-cached" invokeStatic "eval.clj" 197] ["nextjournal.clerk.eval/read+eval-cached" invoke "eval.clj" 167] ["nextjournal.clerk.eval/eval-analyzed-doc/fn--26575" invoke "eval.clj" 237] ["clojure.lang.PersistentVector" reduce "PersistentVector.java" 418] ["clojure.core/reduce" invokeStatic "core.clj" 6964] ["clojure.core/reduce" invoke "core.clj" 6947] ["nextjournal.clerk.eval/eval-analyzed-doc" invokeStatic "eval.clj" 232] ["nextjournal.clerk.eval/eval-analyzed-doc" invoke "eval.clj" 229] ["nextjournal.clerk.builder/build-static-app!/fn--29498/fn--29501" invoke "builder.clj" 310] ["nextjournal.clerk.builder/build-static-app!/fn--29498" invoke "builder.clj" 306] ["clojure.core/map/fn--5958" invoke "core.clj" 2777] ["clojure.lang.LazySeq" force "LazySeq.java" 50] ["clojure.lang.LazySeq" realize "LazySeq.java" 89] ["clojure.lang.LazySeq" seq "LazySeq.java" 106] ["clojure.lang.RT" seq "RT.java" 555] ["clojure.core/seq--5486" invokeStatic "core.clj" 139] ["clojure.core.protocols/seq-reduce" invokeStatic "protocols.clj" 24] ["clojure.core.protocols/fn--8262" invokeStatic "protocols.clj" 74] ["clojure.core.protocols/fn--8262" invoke "protocols.clj" 74] ["clojure.core.protocols/fn--8203/G--8198--8216" invoke "protocols.clj" 13] ["clojure.core/reduce" invokeStatic "core.clj" 6965] ["clojure.core/into" invokeStatic "core.clj" 7038] ["clojure.core/mapv" invokeStatic "core.clj" 7050] ["clojure.core/mapv" invoke "core.clj" 7050] ["nextjournal.clerk.builder/build-static-app!" invokeStatic "builder.clj" 303] ["nextjournal.clerk.builder/build-static-app!" invoke "builder.clj" 273] ["nextjournal.clerk/build!" invokeStatic "clerk.clj" 581] ["nextjournal.clerk/build!" invoke "clerk.clj" 533] ["nextjournal-markdown-a-first-look/eval31757" invokeStatic "NO_SOURCE_FILE" 47] ["nextjournal-markdown-a-first-look/eval31757" invoke "NO_SOURCE_FILE" 47] ["clojure.lang.Compiler" eval "Compiler.java" 7700] ["nrepl.middleware.interruptible-eval/evaluator/run--1446/fn--1457" invoke "interruptible_eval.clj" 106] ["nrepl.middleware.interruptible-eval/evaluator/run--1446" invoke "interruptible_eval.clj" 101] ["nrepl.middleware.session/session-exec/session-loop--1530" invoke "session.clj" 230] ["nrepl.SessionThread" run "SessionThread.java" 21]], :cause "class clojure.lang.PersistentHashMap cannot be cast to class java.lang.String (clojure.lang.PersistentHashMap is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')"}, :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/throwable-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-throwable, :hash "5dteYFuGB6JksPTntzaRg8DSYAnVhE"}, :nextjournal/render-opts {:fragment-item? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dqs6rovfutfaGNZWKcSH6TzW7VX1b-result-2"}}, :nextjournal/blob-id "5dsEiM7gFcRPKTxUpEET4ayDtSGq16"}, :nextjournal/render-opts {:fragment-item? true, :id "nextjournal-markdown-a-first-look/anon-expr-5dqs6rovfutfaGNZWKcSH6TzW7VX1b-result-2"}, :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "nextjournal-markdown-a-first-look/markdown-5duET7WGhPj3qk6y7H7PXrao52GLCS"} [:p [:<> "Why?"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Because ->hiccup takes a raw string, not the data IR."]]], :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/markdown-5duET7WGhPj3qk6y7H7PXrao52GLCS"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(-> \"# Markdown, OHOI! â›µ\" md/->hiccup)", :nextjournal/render-opts {:loc {:line 34, :end-line 34, :column 1, :end-column 39}, :id "nextjournal-markdown-a-first-look/anon-expr-5dsoJQG7TwGYqbETcwPqySQuRALx9a-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value :div, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :h1, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value [{:path [1 1 1 0 0], :nextjournal/value :id, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1 0 1], :nextjournal/value "markdown,-ohoi!-â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}} {:path [1 1 2], :nextjournal/value "Markdown, OHOI! â›µ", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "]" "]"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5dsoJQG7TwGYqbETcwPqySQuRALx9a-result-1"}}, :nextjournal/blob-id "5dsrrWq1P9iGpTym8PL1FNecqv6gJF"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5dsoJQG7TwGYqbETcwPqySQuRALx9a-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "nextjournal-markdown-a-first-look/markdown-5dr1iefpnpBv5yiHTXmQX5YGG24sLC"} [:p [:<> "Much better."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We can even render the HTML!"]]], :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/markdown-5dr1iefpnpBv5yiHTXmQX5YGG24sLC"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(-> \"# Markdown, OHOI! â›µ\" md/->hiccup clerk/html)", :nextjournal/render-opts {:loc {:line 38, :end-line 38, :column 1, :end-column 50}, :id "nextjournal-markdown-a-first-look/anon-expr-5dt2khzua7e3BMcoh9uyS8xQ5HZ3Lc-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [:div [:h1 {:id "markdown,-ohoi!-â›µ"} "Markdown, OHOI! â›µ"]], :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5dt2khzua7e3BMcoh9uyS8xQ5HZ3Lc-result-1"}}, :nextjournal/blob-id "5dtnY8jE5EwFwTmYRDu9aFjEQDXput"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5dt2khzua7e3BMcoh9uyS8xQ5HZ3Lc-result-1"}, :nextjournal/visibility {:code :show, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(fs/glob \"..\" \"**/*.md\")", :nextjournal/render-opts {:loc {:line 40, :end-line 40, :column 1, :end-column 25}, :id "nextjournal-markdown-a-first-look/anon-expr-5drZPVxou6xuGUTJNYGYt8jUw9m5Xh-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value "#object[sun.nio.fs.UnixPath 0x510a1b0a \"../document-transform-pandoc-clojure/doc.md\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}} {:path [1 1], :nextjournal/value "#object[sun.nio.fs.UnixPath 0x308d53df \"../document-transform-pandoc-clojure/link.md\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}} {:path [1 2], :nextjournal/value "#object[sun.nio.fs.UnixPath 0x759d076c \"../code-sandbox/zepi/README.md\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}} {:path [1 3], :nextjournal/value "#object[sun.nio.fs.UnixPath 0x38a6691a \"../unix-signals-intro/demo-rust/README.md\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5drZPVxou6xuGUTJNYGYt8jUw9m5Xh-result-1"}}, :nextjournal/blob-id "5dthLdm3cE3qU44i1fNvWAQbiLN82d"}, :nextjournal/render-opts {:id "nextjournal-markdown-a-first-look/anon-expr-5drZPVxou6xuGUTJNYGYt8jUw9m5Xh-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}