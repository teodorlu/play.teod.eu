:PROPERTIES:
:ID: 9dfae94f-677a-49a6-bee3-98a2bb470e48
:END:
#+title: Open problems

[[./..][..]]

Structure by idea, not by time.

List of problems I want to grapple with.

* Front 'n center problems
Empty here for new.
Need to brew some more.
* Brewing problems / problem options / nexus of problems
Gotta catch them all!
** Working properly with strategic initiatives
Ever since I went into IT in 2019, I've felt shackled by the time horizon of the teams I've been working with.
Where is the long term thinking?
For Unicad, it's vital that we're able to work with what matters long term.
Research is a better analogy for much of what we do than "coding stuff".

See also: https://cutlefish.substack.com/p/tbm-3052-why-do-we-have-no-strategy

See also: [[id:b94ada99-dfc3-4f3e-ba69-a4edf5fc1efd][Why don't we have a strategy?]]
*** 2022-09-17 - review
I've made a strategic framework: [[id:7e70b878-1ef2-4ab6-885b-727eb557213d][OGGPOW: A non-coercive strategic framework]].
** C, OpenGL / Graphics, WebGL
What?
Problem?
Are C and OpenGL problems?

Well, not really.
But there's stuff here I want to learn.

What  specifically?

1. I want to be able to write code that uses the memory effectively.
   For that, I believe minimal distance between me and the memory is the way to go.
   So go C!
2. I want to understand how to think about memory layouts.
   What does it feel like when there's just me, the computer and its memory?
3. I want to be able to draw high-performance graphics!
4. I want to be able to write high-performance code.
*** Wait, what I really want is GPU-powered visualization.
Which I can get with [[id:cab308ab-00db-4584-89a8-b7371b41275c][Mathbox]].
Hmm.
Hmmmmmmmmmmmm.
** A generic place to store data
Possibly =store.teod.eu=.

Why?

- Dump data from different places
- Experiment with data capture

"Personal information architecture"
*** 2022-09-17 I haven't had much need yet.
Just plaintext is nice. But it limits interactivity.
** Rewrite =p= and =teod_fzf_cd= to babashka
Here's the ZSH code:

#+begin_src
teod_fzf_cd () {
    root="$1"
    depth="$2"
    folders=$(cd "$root" && find . -mindepth "$depth" -maxdepth "$depth" | sed "s|^./||g" | sort )
    folder=$(echo "$folders" | fzf)
    cd "$root/$folder"
}
#+end_src

Why babashka?

1. I prefer to maintain Clojure code to maintain ZSH code.
2. Wait, I need a wrapper regardless.
   Otherwise =cd= doesn't work.
*** 2022-09-17 probably don't want to do that.
** What is the list of concepts a new developer should be introduced to?
*** Motivating context
A new developer arrives.
We want to:

- allow the new developer to become effective quickly
- build a habit of discussing & synthesizing team knowledge
*** Idea
We build our knowledge as a language.
We prioritize its words.
For those words, we write motivating essays.
** How can I communicate properly on the web that /my page/ is only a reference?
Case: I want to create "intermediate" pages for remote references.
But I don't want the to create confusion about what the canonical page for something is.
How can I achieve that?

Ideally, there's some HTTP / HTML stuff.
A W3C spec or something.
"Please do not treat this page as canonical".
I want to ask Sindre, Oddmund, Richard and Sean about this.
*** HTTP redirect.
* Closed problems
** Getting cross-article Org-roam links working
I honestly cannot be bothered to maintain links to specific article IDs.
Especially before I've shared them for public consumption.
Meaning "Ready for comments" and above.
*** 2022-09-17 FIxed!
* 2022-09-17
Morn.
** Open problems require curation
1. Writing a list of open problems, then never revisiting doesn't work
2. Just because I've written a problem down doesn't make it important.
3. I need to balance focus on new, interesting things with revisiting old stuff.

Possible actions.

1. Restructure this page as a log.
   Add new entries to the log.
   Review old entries from the log.
2. Enable viewing the open problems as a list
   1. Is "open problem" a page type?
   2. Kinda looks like it
   3. That would make listing open problems "possible"
      1. And I could create a "go to random open problem" button.
* 2022-08-27
ACTION TIME

1. Open problems are nice.
   I want to continue this path.
2. [[id:0cc48734-e933-44cb-a4e8-2678f125f6df][Attention design]] is important.
   What problems are on top?
   For this, just copy the structure from other places.
3. New problems!
   1. Define [[id:6ac830ef-cb3f-48ea-924a-5304384c4b8e][phenomenology]]
   2. Define [[id:0ca0f3d5-ecae-40fe-9e79-2f24e6780079][existentialism]]
   3. Create a data visualization gallery
