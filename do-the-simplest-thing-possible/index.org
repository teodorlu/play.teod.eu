:PROPERTIES:
:ID: ef835eb0-e607-4a81-984c-0ee3410042df
:END:
#+TITLE: Do the simplest thing possible

[[file:..][..]]

I published a text (in Norwegian) I was happy with on Wednesday last week, with totallly unexpected consequences.
I think I've had writer's block without noticing, and now the floodgates are open.
Words churning in my head made it hard to get out of the shower, a conflict between the space of the thoughts in my head and not crashing into furniture.

Do the simplest thing possible.
In technology, in product, in life.

That's it!
Now you can stop reading.

Or not.
Keep reading if you're interested in keeping technology simple, and what happened in the shower.
Three events crashed into each other, becoming one.
In the fall of 2020, I was paring on an Elm codebase with [[id:8833ff2f-ed66-4db2-ac14-6f8eff9f70d4][Oddmund]].
I was planning ahead, preparing the code for changes to come.
Oddmund asked "Why not change the code when the changes come?".
In September 2024, I attended [[id:7dc3c7ee-6d1b-4c43-a20d-5f78d7cf198a][Heart of Clojure]].
Loved the conference.
I attended a workshop on [[id:807ad84e-edf9-46c9-a35c-e8fbc1c5ac66][application.garden]].
Application.garden is the simplest hosting plattform for Clojure (my claim).
The workshop was about writing a simplest possible web app that does something reasonable.
One of [[id:4ba42678-1667-426d-a07f-dfe96ab46bd2][Jack Rusher]]'s remarks stuck with me:
"You might as well /try/ to do the simplest thing possible when you're starting out.
 Complexity will come for you soon enough."
The last three weeks, I've had the opportunity to pair with [[id:05a34792-5bd2-43d6-8c0f-6ca62c01b626][Christian Johansen]] and [[id:6d36df4a-c172-460d-a9cf-8e6ee5d386c8][Magnar Sveen]].
Christian and Magnar practice pair programming, continuous delivery and testing rigorously.
Commits rarely live on a developer's machine for more than a couple of hours before being rolled into production.
With that workflow, I have no choice.
I cannot write a pile of code that plans for the future in interesting ways.
Those plans would paint a partial image of the future and the present, and confuse other developers who are reading my code.
Also, it breaks our "social-processional coding contract": new concepts shall be introduced in pair programming sessions, not in isolation.

Do the simplest thing possible.
In technology, in product, in life.

Teodor, 2024-11-03
