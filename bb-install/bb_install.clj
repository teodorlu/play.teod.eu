(ns bb-install
  (:require [babashka.cli :as cli]
            [babashka.fs :as fs]
            [clojure.string :as str]))


;; $ bb -m bb-install bb.edn --main ucad --install-dir ~/.local/bin --dry-run
;; #!/usr/bin/env bash
;;
;; # This script was generated by `bb install`.
;; # TODO link to `bb install` docs
;;
;; exec bb --config /home/teodorlu/dev/iterate/squirreltime/ucad/bb.edn -m ucad "$@"

(defn- lines [& ls]
  (str/join "\n" (map str ls)))

(defn shell-escape-string [s]
  ;; TODO, not sure how
  ;; Otherwise, we'll fail on spaces in file names
  s)

(defn run [opts]
  (let [opts (merge {:wrapper-script-type :bash                    ; :wrapper-script-type should default to batch on Windows
                     :install-dir (fs/expand-home "~/.local/bin")}
                    opts)
        {:keys [dry-run main wrapper-script-type install-dir bb-edn-path]} opts]
    (assert dry-run "Only dry-run is supported for now")
    (assert main)
    (assert wrapper-script-type)
    (assert (#{:bash} wrapper-script-type) "Only bash wrappers are supported for now")
    (assert install-dir)
    (assert bb-edn-path)

    ;; without dry-run, should write to a file.
    (println (lines
              "#!/usr/bin/env bash"
              ""
              "# This script was generated by `bb install`."
              "# TODO link to `bb install` docs"
              ""
              (str "exec bb --config " (shell-escape-string (fs/absolutize bb-edn-path)) " -m " main " \"$@\"")))))

(defn -main [& args]
  (let [opts (cli/parse-opts args
                             {:alias {:m :main}
                              :coerce {:main :string
                                       :wrapper-script-type :keyword
                                       :dry-run :boolean
                                       :install-dir :string}
                              :args->opts [:bb-edn-path]})]
    (run opts)))
