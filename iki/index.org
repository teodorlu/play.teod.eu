:PROPERTIES:
:ID: b57bc14e-0a1b-49b0-a745-23c605414ba0
:END:
#+TITLE: iki: knowledge iterated

[[file:..][..]]

Formerly known as [[id:f4762ab2-c1e5-4b90-9e59-be3ad6e6eafd][dbx]].

The recommended introduction to IKI is a [[id:1b1a3e02-9247-496e-b70f-2aee1251d1ff][Scicloj]] meeting from 2022-10-23:

#+BEGIN_EXPORT html
<iframe class="youtube-video" src="https://www.youtube.com/embed/JSMcK5strRo?start=616" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
#+END_EXPORT

* 2023-02-18
** Idea sketch
I see lack of shared intent, lack of shared sense of quality and lack of trust as the three biggest factors holding current software and product teams back.
IKI is the tool I wish I had for building shared intent, building trust, and building shared sense of quality.

I want:

1. Something plaintext-based where I can put the corpus of content in Git
2. An ergonomic way to link to content
3. Good HTML export
4. Good HTML navigation user interface
   1. We get a lot for free with the browser
   2. But we want more stuff:
      1. Tagging and metadata
      2. Quickly navigating to /any page/, not just direct links
      3. Navigating to a random page

IKI leans on two narrow waists: everything is a file (creating centric), and the web (consumption centric).
We support extending the creation interface by progreamming with data, and the consumption interface with web technology.
** Implementation sketch
Core system built with Clojure & pandoc.
Can run on Babashka and JVM Clojure.

IKI is a library (first) and a CLI (second).
The recommended IKI setup is to extend the library to provide a custom CLI.
(is this an IKI distribution?)
Code editors (Emacs, VSCode, etc) talk to the CLI through a plugin, providing things like fuzzy link target selection.
** IKI providers sketch
Multiple IKI sources must be allowed.
Provider capabilities:

1. Available links
2. Iterface through a data layer
3. Allow for non-plaintext user interfaces.
* 2023-02-19
** Why am I not working on iki?
1. Because I'm not using iki daily
2. Because I don't know what the correct next step is /exactly/
3. Because I'm not using iki for [[id:0c9bef25-85ef-48e8-b4fd-d60160f177ec][play.teod.eu]].
** What are my current [[id:0c9bef25-85ef-48e8-b4fd-d60160f177ec][play.teod.eu]] pain points?
1. Reindexing troubles
   1. Changing the title of a post is a hassle!
      The data is two places: page source and metadata file.
      And the index lingers - =by-uuid= pages linger.
   2. The reindexing logic is complex.
      I mix an Emacs UI, a Babashka CLI and a generated Makefile.
      I want less moving pieces.
