:PROPERTIES:
:ID: 8f2d71cb-6c4a-49eb-a5a9-bbca92ad10d8
:END:
#+TITLE: Scicloj 2022-10: knowledge management on play.teod.eu

[[file:..][..]]

How can we best learn together?
What does "learning together" look like on the web?

Over the last months, Teodor has used https://play.teod.eu to learn stuff.
In this visual-tools meeting, he'll share his workflow, and some ideas about collective knowledge management for Clojure data science.

Scicloj visual-tools meeting 15 information on Cloureverse:
https://clojureverse.org/t/visual-tools-meeting-15-a-common-ground-for-notes-with-kindly/9425

* rationale: learning in public
1. I'm interested in Scicloj and collective knowledge management
2. I'm excited about my current learning process
3. So I'm going to share a bit :)
* vision: scicloj knowledge archipelago
1. easy to create knowledge
2. easy to collect and curate knowledge
3. easy to learn.
* who is this guy?
used to do civil engineering, numerical analysis of nonlinear mechanics

then software

these days product

very interested in how we can build knowledge together.

inspired by [[id:dde82bbc-e4c8-49c0-b577-dba0cba0bdf7][The Beginning of Infinity]], a book about good explanations
* demo: =play.teod.eu=
Things I could show:

1. Create a new page, and deploy it
   1. Page for Daniel, perhaps?
2. Linking to other pages
3. the =play.clj relations= CLI
   1. Optional. Kinda cool, not essential.

I'm going to emphasize "showing the whole" over "explaining how everything works".

#+begin_src shell-script
# CHEAT SHEET

# preview server (bb-http-server)
$ play.teod.eu-preview.sh

# relations (metadata system)
$ ./play.clj relations
$ ./play.clj relations :from files :to lines | head
$ ./play.clj relations :from files :to lines2 | head
#+end_src
* =play.teod.eu= tech --- "how does this work?"
(please jump in and ask questions, I'm not sure what people are interested in)

1. one folder for each document
   1. metadata in EDN files
      1. CLI for modifying metadata
   2. Embedding small HTML stuff is super easy
      1. Example: [[id:9eccb2aa-fe9a-4855-b0d3-8f89cbe1d825][Scicloj libraries and tools]]
      2. Example: the "random button" on the [[file:..][front page]]
2. no build step, HTML files in Git
   1. really fast deploys!
      Currently 20-30 seconds, >95% of that is waiting for Cloudflare
3. A big =babashka/cli= script
4. Org-mode, org-roam and some Emacs lisp functions
   1. I don't want org-mode or emacs dependencies in dbx
5. a big generated makefile
   1. makefile generation is painful.
      It's one big string, I want data.
   2. for dbx, I want pure babashka, no makefiles.
      just use =babashka.fs/modified-since=
* "but this is all heavily adapted for Teodor's preference"
Yes.

1. [[id:0c9bef25-85ef-48e8-b4fd-d60160f177ec][play.teod.eu]] --- my knowledge playground / backyard / garden
2. [[id:f4762ab2-c1e5-4b90-9e59-be3ad6e6eafd][dbx]] --- "a collective knowledge toolkit for babashka zealots"
   1. dbx doesn't really exist outside my head (yet)

plan: put the good parts of play.teod.eu into dbx,
  refactor play.teod.eu to use dbx.
  delete code.

In other words: decouple the tool from the site.
* scicloj knowledge archipelago
/Q: how can I learn Clojure data science?/

ğŸ¤”
=:daniel_thinking_face:=
=:kira_thinking_face:=

/Q: how do we create, collect and index Clojure data science learning materials together?/

#+begin_verse
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
#+end_verse

(requires thinking together :))
* current initiatives
1. [[https://github.com/scicloj/clojure-data-cookbook][clojure-data-cookbook]] (Kira McLean)
2. [[https://github.com/clojupedia/clojupedia.org][clojupedia.org]] (Adam Helinski)
3. [[https://scicloj.github.io/docs/resources/libs/][scicloj.github.io/docs/resources/libs]] (mostly Daniel I think?)
* option: page types on play.teod.eu
1. Call to action --- "here's something more people should do"
2. Definition --- "this is a name I'd like to reuse, here's a nice abstraction."
3. Journals --- "this is just a record"
4. Remote references --- "pointers to content from others, possibly annotated"

(note: a page can be )
* getting in touch with Teodor
async questions later?
ping me!

| https://teod.eu           | links to github, twittter, etc |
| Clojurians Slack          | @teodorlu                      |
| Clojurians Slack channels | Mostly #babashka               |

I'm really excited about this stuff.

#+BEGIN_VERSE





#+END_VERSE
