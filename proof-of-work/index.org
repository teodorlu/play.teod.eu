:PROPERTIES:
:ID: 332543a2-3a55-46d5-b447-57e52dca5642
:END:
#+TITLE: proof of work

[[file:..][..]]

DRAFT

Are you trying to make something happen?
Are you looking for the smart way out?
The way you can get away with minimal effort?
Then, when you try to get others to do your thing, they ... don't?

If you tell kids that they have stay in line, they will tell other kids that the other kids have to stay in line.

As humans, we don't rely purely on analysis of information.
We also judge effort.
Effort signals significance.
Where are we putting our work?
Are we getting any impact from the effort?

Instead of looking for the hack, consider doing the work and sharing the proof of that work.

#+begin_export html
<details>
<summary>This is the summary</summary>
#+end_export
Here comes some org-mode text

- item
- yet /another/

#+begin_src clojure
(inc 99)
#+end_src

#+begin_export html
</details>
#+end_export

It works!!!
ðŸ’•

I could create a pandoc transformer that makes details elements out of org-mode headings. That would be kind of neat.

#+begin_src markdown
# A light outliner

Could have

## An input document format with headings

The input format is text-based, and the user's editor handles outlining.

## HTML output with `details`-elements

Web native, and fast!
#+end_src

#+begin_src html
<details>
  <summary><strong>
      A light outliner
  </strong></summary>

  could have

  <details>
    <summary>
      <strong>
        An input document format with headings
      </strong>
    </summary>

    The input format is text based, and the user's editor handles outlining.
  </details>

  <details>
    <summary>
      <strong>
        HTML output with <pre>details</pre>-elements
      </strong>
    </summary>

    Web native, and fast!
  </details>
</details>
#+end_src

Rendered HTML:

#+begin_export html
<details>
  <summary><strong>
      A light outliner
  </strong></summary>

  could have

  <details>
    <summary>
      <strong>
        An input document format with headings
      </strong>
    </summary>

    The input format is text based, and the user's editor handles outlining.
  </details>

  <details>
    <summary>
      <strong>
        HTML output with <pre>details</pre>-elements
      </strong>
    </summary>

    Web native, and fast!
  </details>
</details>
#+end_export
