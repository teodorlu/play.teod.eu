{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Easy, explicit parallellism with pipeline-blocking", :emoji nil, :path "#easy,-explicit-parallellism-with-pipeline-blocking", :items [{:title "A slow operation and a timer", :emoji nil, :path "#a-slow-operation-and-a-timer", :items []} {:title "Single threaded with clojure.core/map", :emoji nil, :path "#single-threaded-with-clojure.core/map", :items []} {:title "Runtime-controlled parallelism with clojure.core/pmap", :emoji nil, :path "#runtime-controlled-parallelism-with-clojure.core/pmap", :items []} {:title "User-controlled parallellism with clojure.core.async/pipeline-blocking", :emoji nil, :path "#user-controlled-parallellism-with-clojure.core.async/pipeline-blocking", :items []} {:title "Colophon and thanks", :emoji nil, :path "#colophon-and-thanks", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns easy-parallellism-with-pipeline-blocking), :file "src/easy_parallellism_with_pipeline_blocking.clj", :scope easy-parallellism-with-pipeline-blocking, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil nil [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/teodorlu/lab/blob/f293937aa66881920856a8c2b289a3dc500f1f11/src/easy_parallellism_with_pipeline_blocking.clj"} "src/easy_parallellism_with_pipeline_blocking.clj" [:<> "@" [:span.tabular-nums "f293937"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Easy, explicit parallellism with pipeline-blocking", :description ".."}, :title "Easy, explicit parallellism with pipeline-blocking", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtnw2Gk7nNfq2f7RinBy44s54nYob"} [:p [:a {:href "https://play.teod.eu"} [:<> ".."]]] ["h1" {:id "easy,-explicit-parallellism-with-pipeline-blocking"} [:<> "Easy, explicit parallellism with "] [:code [:<> "pipeline-blocking"]]] [:p [:<> "If you want a "] [:code [:<> "map"]] [:<> " to go faster, you could use "] [:code [:<> "pmap"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "But what if you need more control than "] [:code [:<> "pmap"]] [:<> " can give you?"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "What if your problem is memory constrained?"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Read on to discover your options!"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtnw2Gk7nNfq2f7RinBy44s54nYob"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(ns easy-parallellism-with-pipeline-blocking\n  {:nextjournal.clerk/toc true}\n  (:refer-clojure :exclude [time])\n  (:require\n   [clojure.core.async :as a]\n   [nextjournal.clerk :as clerk]\n   [babashka.fs :as fs]))", :nextjournal/render-opts {:loc {:line 11, :end-line 17, :column 1, :end-column 26}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtxoASFHidv7pwjcZ9dpYP7FeiQkP-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drBn4U2N29PN8vsow7mWhqZy1WX7D"} [:p [:code [:<> "pipeline-blocking"]] [:<> " is from "] [:code [:<> "clojure.core.async"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "And we're going to make our own way to time our code."]] ["h2" {:id "a-slow-operation-and-a-timer"} [:<> "A slow operation and a timer"]] [:p [:<> "We're going to explore our parallelism interactively."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "For this we'll need two helpers, a slow operation, and a way to time operations."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "First, a slow operation."]] [:p [:<> "Also, "] [:code [:<> "clojure.core/time"]] [:<> " outputs to standard out, so we'll make our own function for timing."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drBn4U2N29PN8vsow7mWhqZy1WX7D"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn slow [extra-latency-ms op]\n  (fn [& args]\n    (Thread/sleep extra-latency-ms)\n    (apply op args)))", :nextjournal/render-opts {:loc {:line 32, :end-line 35, :column 1, :end-column 22}, :id "easy-parallellism-with-pipeline-blocking/slow-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def slow+ (slow 100 +))", :nextjournal/render-opts {:loc {:line 37, :end-line 37, :column 1, :end-column 25}, :id "easy-parallellism-with-pipeline-blocking/slow+-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(slow+ 1 2)", :nextjournal/render-opts {:loc {:line 41, :end-line 41, :column 1, :end-column 12}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5ds8nbJqRhheWL62APqds6TksLnsd6-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5ds8nbJqRhheWL62APqds6TksLnsd6-result-1"}}, :nextjournal/blob-id "5duHw8AUdcBowZHKomnZEqSUK4SGMF"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5ds8nbJqRhheWL62APqds6TksLnsd6-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsTs5kW8GmFw6HYacSR3vmJphr9zD"} [:p [:<> "It returns 3!"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "But you, the reader have no reason to know wether it was actually slow or not."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsTs5kW8GmFw6HYacSR3vmJphr9zD"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn time* [f]\n  (let [before (System/currentTimeMillis)\n        value (f)\n        after (System/currentTimeMillis)\n        duration-ms (- after before)]\n    {:value value :duration-ms duration-ms}))", :nextjournal/render-opts {:loc {:line 48, :end-line 53, :column 1, :end-column 46}, :id "easy-parallellism-with-pipeline-blocking/time*-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defmacro time\n  \"An alternative to `clojure.core/time` suitable for notebooks\"\n  [& body]\n  `(time* (fn [] ~@body)))", :nextjournal/render-opts {:loc {:line 55, :end-line 58, :column 1, :end-column 27}, :id "easy-parallellism-with-pipeline-blocking/time-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (slow+ 1 2))", :nextjournal/render-opts {:loc {:line 62, :end-line 62, :column 1, :end-column 19}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtMJwJaVrmhjqeSr9zGYE1brVoxBK-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 106, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :closing-paren ("}"), :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtMJwJaVrmhjqeSr9zGYE1brVoxBK-result-1"}}, :nextjournal/blob-id "5du4fMRjBJtwzp6MjEy6mJt7whdyT3"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtMJwJaVrmhjqeSr9zGYE1brVoxBK-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5duAdc14NwZdA3DbXkj3e56FYatjnh"} [:p [:<> "There you go."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Now, you, the reader, might assume that what we wrote after "] [:code [:<> ":duration-ms"]] [:<> " was how long time it actually took."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "If you decide to put your faith in us today."]] ["h2" {:id "single-threaded-with-clojure.core/map"} [:<> "Single threaded with "] [:code [:<> "clojure.core/map"]]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5duAdc14NwZdA3DbXkj3e56FYatjnh"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (map (partial slow+ 10) [100 200 300]))", :nextjournal/render-opts {:loc {:line 70, :end-line 70, :column 1, :end-column 46}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsAjVCnGUwQJsQNSMsQiXsa7EqhJh-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 210, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 310, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")" "}"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsAjVCnGUwQJsQNSMsQiXsa7EqhJh-result-1"}}, :nextjournal/blob-id "5dqvnBKM6mRnnujq16UYHyCi45j6n8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsAjVCnGUwQJsQNSMsQiXsa7EqhJh-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtwSMSwnV4KySFtAMbvM492dz9qiJ"} [:p [:<> "Wait, 0 ms?"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "That was not what we exected."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "If one op takes about 100 ms, shouldn't three ops take about 300 ms?"]] [:p [:code [:<> "(doc map)"]] [:<> " gives a clue:"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:div.code-viewer.code-listing [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0], :nextjournal/value " clojure.core/map\n ([f] [f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])\n   Returns a lazy sequence consisting of the result of applying f to\n […]", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code, :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:p [:<> "Lazyness!"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Right."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "\"Lazyness and impurity is a bad match\", timing is impure."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We returned a lazy sequence that did no work, then timed no work, then the rendering of the value triggered the realization of the lazy sequence."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We could force the lazyness out with a doall in the expression:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtwSMSwnV4KySFtAMbvM492dz9qiJ"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (doall (map (partial slow+ 10) [100 200 300])))", :nextjournal/render-opts {:loc {:line 89, :end-line 89, :column 1, :end-column 54}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtTtaiktJkT8HjphS4GL2FGcjEwb3-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 313, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 210, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 310, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")" "}"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtTtaiktJkT8HjphS4GL2FGcjEwb3-result-1"}}, :nextjournal/blob-id "5dsWMaFKc52EPyRRDcYBnvgwvqP18a"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtTtaiktJkT8HjphS4GL2FGcjEwb3-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsE2zFsmgQpvLtk3mDT8wokTdSivV"} [:p [:<> "Or avoid the issue with "] [:code [:<> "clojure.core/mapv"]] [:<> ", which is eager."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsE2zFsmgQpvLtk3mDT8wokTdSivV"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (mapv (partial slow+ 10) [100 200 300]))", :nextjournal/render-opts {:loc {:line 93, :end-line 93, :column 1, :end-column 47}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsy6oHY69U5sBoTF3k6SvFrDWx3b1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 317, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 210, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 310, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsy6oHY69U5sBoTF3k6SvFrDWx3b1-result-1"}}, :nextjournal/blob-id "5dqvUi6XhcyVBhsMGvTadaKfeKMwSP"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsy6oHY69U5sBoTF3k6SvFrDWx3b1-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5du21CCagA96FfyPrpY5aFHTyZ12LD"} ["h2" {:id "runtime-controlled-parallelism-with-clojure.core/pmap"} [:<> "Runtime-controlled parallelism with "] [:code [:<> "clojure.core/pmap"]]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5du21CCagA96FfyPrpY5aFHTyZ12LD"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (pmap (partial slow+ 10) [100 200 300]))", :nextjournal/render-opts {:loc {:line 97, :end-line 97, :column 1, :end-column 47}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dstYuzcUoqaGT3R33BrDf6nLi6iRj-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 210, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 310, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")" "}"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dstYuzcUoqaGT3R33BrDf6nLi6iRj-result-1"}}, :nextjournal/blob-id "5drZchDG1XJtoBHuvWTBxwjWXqdidi"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dstYuzcUoqaGT3R33BrDf6nLi6iRj-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drDCZCxjfnNRK33YwiJPWJ4BU5WRb"} [:p [:<> "Lazyness gives us yet another smack!"]] [:p [:code [:<> "pmapv"]] [:<> " isn't provided, so let's create it."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drDCZCxjfnNRK33YwiJPWJ4BU5WRb"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def pmapv (comp vec pmap))", :nextjournal/render-opts {:loc {:line 103, :end-line 104, :column 1, :end-column 28}, :id "easy-parallellism-with-pipeline-blocking/pmapv-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(time (pmapv (partial slow+ 10) [100 200 300]))", :nextjournal/render-opts {:loc {:line 106, :end-line 106, :column 1, :end-column 48}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtdFEFTTEBpLwBHhDrfqnyeCHnTC1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 105, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 210, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 310, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtdFEFTTEBpLwBHhDrfqnyeCHnTC1-result-1"}}, :nextjournal/blob-id "5dt8LomWzMERuZrSpAdQ9CdVjy9hkH"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtdFEFTTEBpLwBHhDrfqnyeCHnTC1-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsB2Qd5wejKAk5MJ7gXBqv8QXb6ft"} [:p [:<> "There you go!"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "pmap"]] [:<> " sometimes makes your code go faster."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Sometimes that's just great, and exactly what you need."]] [:p [:<> "To figure out how much parallelism Clojure decides to use, we "] [:em [:<> "can"]] [:<> " read the manual—but we can also fiddle with the REPL."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We're going to work with a function that takes about 10 ms instead of about 100 ms to save some time."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsB2Qd5wejKAk5MJ7gXBqv8QXb6ft"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def timing-1\n  (time (mapv (slow 10 inc)\n              [10 20 30])))", :nextjournal/render-opts {:loc {:line 115, :end-line 117, :column 1, :end-column 28}, :id "easy-parallellism-with-pipeline-blocking/timing-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 38, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 21, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 31, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/timing-1-result-1"}}, :nextjournal/blob-id "5duGHT32DgBR9ekfTPcz5w6P7onCay"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/timing-1-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtNSCgatCdJKjHaLfVRCawqUTQEpc"} [:p [:<> "Great!"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Now with parallelism:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtNSCgatCdJKjHaLfVRCawqUTQEpc"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def timing-2\n  (time (pmapv (slow 10 inc)\n               [10 20 30])))", :nextjournal/render-opts {:loc {:line 122, :end-line 124, :column 1, :end-column 29}, :id "easy-parallellism-with-pipeline-blocking/timing-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 13, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 21, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 31, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/timing-2-result-1"}}, :nextjournal/blob-id "5du91ppAfrSMtPq5c25CdAgvTAJEa7"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/timing-2-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5druzFKJTx7bvKVzF6T4gCD2wxVXxJ"} [:p [:<> "Speedup is "] [:em [:<> "almost 3"]] [:<> " on "] [:em [:<> "certain systems"]] [:<> ":"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5druzFKJTx7bvKVzF6T4gCD2wxVXxJ"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(double\n (/ (:duration-ms timing-1)\n    (:duration-ms timing-2)))", :nextjournal/render-opts {:loc {:line 128, :end-line 130, :column 1, :end-column 30}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsxyConcTU6gzR7y9SMiSXiSEDAqC-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 2.923076923076923, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsxyConcTU6gzR7y9SMiSXiSEDAqC-result-1"}}, :nextjournal/blob-id "5duK7u4nKVh2o1uWCP9s5PGmDCr96B"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsxyConcTU6gzR7y9SMiSXiSEDAqC-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5duBXwbgxUgycNk1CaRiRiNmwr53bN"} [:p [:<> "Let's plot n, speedup(n) and speedup(n)/n for some values of n."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5duBXwbgxUgycNk1CaRiRiNmwr53bN"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn calculate-pmapv-speedup [op args]\n  (double\n   (/ (:duration-ms (time (mapv op args)))\n      (:duration-ms (time (pmapv op args))))))", :nextjournal/render-opts {:loc {:line 134, :end-line 137, :column 1, :end-column 47}, :id "easy-parallellism-with-pipeline-blocking/calculate-pmapv-speedup-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#function[easy-parallellism-with-pipeline-blocking/calculate-pmapv-speedup]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/calculate-pmapv-speedup-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/calculate-pmapv-speedup-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsBAxHRpSUkceCmYoMLyaxxNicEhy"} [:p [:<> "For our own sanity, can we reproduce something like the previous speedup?"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsBAxHRpSUkceCmYoMLyaxxNicEhy"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(calculate-pmapv-speedup (slow 10 inc) [10 20 30])", :nextjournal/render-opts {:loc {:line 141, :end-line 141, :column 1, :end-column 51}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtsbdEVkSQMjVAxLBaXV4DJsbruaG-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 3.083333333333333, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtsbdEVkSQMjVAxLBaXV4DJsbruaG-result-1"}}, :nextjournal/blob-id "5dr2u1V5HmTgCCK2BpYUfrdATshRea"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtsbdEVkSQMjVAxLBaXV4DJsbruaG-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsNdB91M4xnXdnc1gmdBwKU67NuSY"} [:p [:<> "Now, let's plot n and speedup for a few different values."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsNdB91M4xnXdnc1gmdBwKU67NuSY"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(clerk/caption\n \"Speedup for certain values of n\"\n (clerk/table (for [n [3 5 10 20 50]]\n                (let [speedup (calculate-pmapv-speedup (slow 10 inc) (repeatedly n rand))]\n                  {\"n\" n\n                   \"speedup\" (format \"%.2f\" speedup)\n                   \"speedup/n\" (format \"%.2f\" (/ speedup n))}))))", :nextjournal/render-opts {:loc {:line 145, :end-line 151, :column 1, :end-column 66}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr8pzrgEfgbp8988Hw1taLUUTa52T-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value [{:path [1 0 0 0], :nextjournal/value "n", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 0 1], :nextjournal/value "speedup", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 0 2], :nextjournal/value "speedup/n", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-head-viewer, :render-fn #viewer-fn (fn [header-row {:as opts, :keys [path number-col?]}] [:thead (into [:tr] (map-indexed (fn [i {:as header-cell, :nextjournal/keys [value]}] (let [title (when (or (string? value) (keyword? value) (symbol? value)) value)] [:th.pl-6.pr-2.py-1.align-bottom.font-medium.top-0.z-10.bg-white.dark:bg-slate-900.border-b.border-gray-300.dark:border-slate-700 (cond-> {:class (when (and (ifn? number-col?) (number-col? i)) "text-right")} title (assoc :title title)) (nextjournal.clerk.render/inspect-presented opts header-cell)]))) header-row)]), :hash "5dsqSKgdwsoZzZSyiyPEwUXQ4vqY5u"}} {:path [1 0 1], :nextjournal/value [{:path [1 0 1 0], :nextjournal/value [{:path [1 0 1 0 0], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 0 1], :nextjournal/value "2.92", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 0 2], :nextjournal/value "0.97", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 1], :nextjournal/value [{:path [1 0 1 1 0], :nextjournal/value 5, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 1 1], :nextjournal/value "4.77", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 1 2], :nextjournal/value "0.95", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 2], :nextjournal/value [{:path [1 0 1 2 0], :nextjournal/value 10, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 2 1], :nextjournal/value "9.54", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 2 2], :nextjournal/value "0.95", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 3], :nextjournal/value [{:path [1 0 1 3 0], :nextjournal/value 20, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 3 1], :nextjournal/value "9.42", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 3 2], :nextjournal/value "0.47", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 4], :nextjournal/value [{:path [1 0 1 4 0], :nextjournal/value 50, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 4 1], :nextjournal/value "11.47", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 4 2], :nextjournal/value "0.23", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-body-viewer, :render-fn #viewer-fn (fn [rows opts] (into [:tbody] (map-indexed (fn [idx row] (nextjournal.clerk.render/inspect-presented (update opts :path conj idx) row))) rows)), :hash "5drM5aSdAqUwKQbDJKTH5yyZvQuKcP"}}], :nextjournal/width :wide, :nextjournal/render-opts {:num-cols 3, :number-col? #{0}}, :nextjournal/viewer {:name nextjournal.clerk.viewer/table-markup-viewer, :render-fn #viewer-fn (fn [head+body opts] [:div (into [nextjournal.clerk.render/render-table-with-sticky-header] (nextjournal.clerk.render/inspect-children opts) head+body)]), :hash "5duDFrY1FfRW3ZryGH9cPxgzYNTr8G"}} {:path [1 1], :nextjournal/value [:figcaption.text-center.mt-1 [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [1 1 0], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "Speedup for certain values of n"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/col-viewer, :render-fn #viewer-fn (fn [items opts] (into [:div {:class "md:flex md:flex-col md:gap-4 clerk-grid not-prose", :style opts}] (map (fn [item] [:div.flex.items-center.justify-center (nextjournal.clerk.render/inspect-presented opts item)])) items)), :hash "5dtsrdsNS2g5pYHDNF89sKnaCQAUu8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr8pzrgEfgbp8988Hw1taLUUTa52T-result-1"}}, :nextjournal/blob-id "5dqqLPjHTBWYc5VfdaUuyYgbaH4TT9"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr8pzrgEfgbp8988Hw1taLUUTa52T-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drEVb1FSHJvTk1UQNKypSFu5RDLqp"} [:p [:<> "On Teodor's personal computer, speedup/n drops from about 1 for n=5 to about 0.5 for n=20."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Speedup dropoff can be caused by us reaching "] [:code [:<> "pmap"]] [:<> "'s parallellisation limits, or because coordination overhead increases relative to compute time."]] [:p [:<> "For a different perspective, let's look at slower operations (40 ms per op) for lower values of n."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drEVb1FSHJvTk1UQNKypSFu5RDLqp"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(clerk/caption\n \"Speedup for certain values of n\"\n (clerk/table (for [n [2 3 4 5 6 7 8 12 15 18]]\n                (let [speedup (calculate-pmapv-speedup (slow 40 inc) (repeatedly n rand))]\n                  {\"n\" n\n                   \"speedup\" (format \"%.2f\" speedup)\n                   \"speedup/n\" (format \"%.2f\" (/ speedup n))}))))", :nextjournal/render-opts {:loc {:line 158, :end-line 164, :column 1, :end-column 66}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtRCLcFjzDsRvKBWWqwwZ84Hz9LWZ-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value [{:path [1 0 0 0], :nextjournal/value "n", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 0 1], :nextjournal/value "speedup", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 0 2], :nextjournal/value "speedup/n", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-head-viewer, :render-fn #viewer-fn (fn [header-row {:as opts, :keys [path number-col?]}] [:thead (into [:tr] (map-indexed (fn [i {:as header-cell, :nextjournal/keys [value]}] (let [title (when (or (string? value) (keyword? value) (symbol? value)) value)] [:th.pl-6.pr-2.py-1.align-bottom.font-medium.top-0.z-10.bg-white.dark:bg-slate-900.border-b.border-gray-300.dark:border-slate-700 (cond-> {:class (when (and (ifn? number-col?) (number-col? i)) "text-right")} title (assoc :title title)) (nextjournal.clerk.render/inspect-presented opts header-cell)]))) header-row)]), :hash "5dsqSKgdwsoZzZSyiyPEwUXQ4vqY5u"}} {:path [1 0 1], :nextjournal/value [{:path [1 0 1 0], :nextjournal/value [{:path [1 0 1 0 0], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 0 1], :nextjournal/value "1.93", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 0 2], :nextjournal/value "0.97", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 1], :nextjournal/value [{:path [1 0 1 1 0], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 1 1], :nextjournal/value "2.85", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 1 2], :nextjournal/value "0.95", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 2], :nextjournal/value [{:path [1 0 1 2 0], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 2 1], :nextjournal/value "3.91", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 2 2], :nextjournal/value "0.98", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 3], :nextjournal/value [{:path [1 0 1 3 0], :nextjournal/value 5, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 3 1], :nextjournal/value "4.67", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 3 2], :nextjournal/value "0.93", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 4], :nextjournal/value [{:path [1 0 1 4 0], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 4 1], :nextjournal/value "6.33", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 4 2], :nextjournal/value "1.05", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 5], :nextjournal/value [{:path [1 0 1 5 0], :nextjournal/value 7, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 5 1], :nextjournal/value "6.69", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 5 2], :nextjournal/value "0.96", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 6], :nextjournal/value [{:path [1 0 1 6 0], :nextjournal/value 8, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 6 1], :nextjournal/value "7.60", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 6 2], :nextjournal/value "0.95", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 7], :nextjournal/value [{:path [1 0 1 7 0], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 7 1], :nextjournal/value "12.42", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 7 2], :nextjournal/value "1.03", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 8], :nextjournal/value [{:path [1 0 1 8 0], :nextjournal/value 15, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 8 1], :nextjournal/value "7.49", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 8 2], :nextjournal/value "0.50", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}} {:path [1 0 1 9], :nextjournal/value [{:path [1 0 1 9 0], :nextjournal/value 18, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn (fn [x] [:span.tabular-nums (if (js/Number.isNaN x) "NaN" (str x))]), :hash "5dtjkTSxwdkQSpCL61LNPeMBT6EToa"}} {:path [1 0 1 9 1], :nextjournal/value "8.76", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}} {:path [1 0 1 9 2], :nextjournal/value "0.49", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-string, :page-size 80, :hash "5dt3aDkKp71a96V8X8u4mDqsR21CU2"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn (fn [row {:as opts, :keys [path number-col?]}] (into [:tr.hover:bg-gray-200.dark:hover:bg-slate-700 {:class (if (even? (peek path)) "bg-black/5 dark:bg-gray-800" "bg-white dark:bg-gray-900")}] (map-indexed (fn [idx cell] [:td.pl-6.pr-2.py-1 (when (and (ifn? number-col?) (number-col? idx)) {:class "text-right"}) (nextjournal.clerk.render/inspect-presented opts cell)])) row)), :hash "5dtW6cGGmpMKPWrKXEQMDkNHtR6CJq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-body-viewer, :render-fn #viewer-fn (fn [rows opts] (into [:tbody] (map-indexed (fn [idx row] (nextjournal.clerk.render/inspect-presented (update opts :path conj idx) row))) rows)), :hash "5drM5aSdAqUwKQbDJKTH5yyZvQuKcP"}}], :nextjournal/width :wide, :nextjournal/render-opts {:num-cols 3, :number-col? #{0}}, :nextjournal/viewer {:name nextjournal.clerk.viewer/table-markup-viewer, :render-fn #viewer-fn (fn [head+body opts] [:div (into [nextjournal.clerk.render/render-table-with-sticky-header] (nextjournal.clerk.render/inspect-children opts) head+body)]), :hash "5duDFrY1FfRW3ZryGH9cPxgzYNTr8G"}} {:path [1 1], :nextjournal/value [:figcaption.text-center.mt-1 [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [1 1 0], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "Speedup for certain values of n"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/col-viewer, :render-fn #viewer-fn (fn [items opts] (into [:div {:class "md:flex md:flex-col md:gap-4 clerk-grid not-prose", :style opts}] (map (fn [item] [:div.flex.items-center.justify-center (nextjournal.clerk.render/inspect-presented opts item)])) items)), :hash "5dtsrdsNS2g5pYHDNF89sKnaCQAUu8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtRCLcFjzDsRvKBWWqwwZ84Hz9LWZ-result-1"}}, :nextjournal/blob-id "5dtUoxgxFaPibmvMZLgtFTSACCxcd5"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtRCLcFjzDsRvKBWWqwwZ84Hz9LWZ-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dskJeT1XgxxqpMFgk5awyZsZbzi69"} [:p [:a {:href "https://stackoverflow.com/questions/5021788/how-many-threads-does-clojures-pmap-function-spawn-for-url-fetching-operations"} [:<> "A Stackoverflow answer"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "indicates that core.async parallelism is derived from the number of processors on the system:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dskJeT1XgxxqpMFgk5awyZsZbzi69"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(+ 2 (.. Runtime getRuntime availableProcessors))", :nextjournal/render-opts {:loc {:line 169, :end-line 169, :column 1, :end-column 50}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsVvEXgV2D4R5MxKPDedZXCrHAhPi-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsVvEXgV2D4R5MxKPDedZXCrHAhPi-result-1"}}, :nextjournal/blob-id "5dsLx5wSa6XBEBKoa6ZXe5udTptkgm"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsVvEXgV2D4R5MxKPDedZXCrHAhPi-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtzKLuXgwQf34ujs8g8cHrxrbrafN"} ["h2" {:id "user-controlled-parallellism-with-clojure.core.async/pipeline-blocking"} [:<> "User-controlled parallellism with "] [:code [:<> "clojure.core.async/pipeline-blocking"]]] [:p [:<> "In Clojure, we can utilize the core.async library for concurrency and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "parallelism. Let's explore what that looks like by using core.async to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "implement the same behavior as the code above."]] [:p [:<> "An important concept in core.async is channels. You can think of a channel"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "as a thread-safe FIFO queue. In our current case, we will require an input"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channel and an output channel, and a function that takes values from the input"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channel, adds to the values via the "] [:code [:<> "slow+"]] [:<> " function, and then puts the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "resulting values on the output channel. I call these types of functions 'worker'"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "functions since they run concurrently, move values between channels, and usually"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "perform some 'work' on the values."]] [:p [:<> "It may help to think about core.async code as pipelines with one or more"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "steps. Channels can be thought of as the lines that data flows through, while"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "worker functions are the components that do some work on the values between"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channels. In our case, we have a simple pipeline with one step:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtzKLuXgwQf34ujs8g8cHrxrbrafN"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value "flowchart LR\n    source-- channel in -->worker-- channel out -->sink", :nextjournal/viewer {:render-fn #viewer-fn (fn [value] (when value [nextjournal.clerk.render/with-d3-require {:package ["mermaid@8.14/dist/mermaid.js"]} (fn [mermaid] [:div {:ref (fn [el] (when el (.render mermaid (str (gensym)) value (fn* [%1] (set! (.-innerHTML el) %1)))))}])])), :hash "5drq1ZENtebfWdneaTgA6uyixDGjHz"}} {:path [0 1], :nextjournal/value [:figcaption.text-center.mt-1 [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 1 0], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "A normal core.async workflow: a worker taking items from an input channel, transforming the item, and putting the transformed item on an output channel."]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/col-viewer, :render-fn #viewer-fn (fn [items opts] (into [:div {:class "md:flex md:flex-col md:gap-4 clerk-grid not-prose", :style opts}] (map (fn [item] [:div.flex.items-center.justify-center (nextjournal.clerk.render/inspect-presented opts item)])) items)), :hash "5dtsrdsNS2g5pYHDNF89sKnaCQAUu8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsnKZCTnpBhXUucAaVUnNUmxf4j3d-result"}}, :nextjournal/blob-id "5dsYhTJppv6Q2BVmejkhEfNJgNb3z5"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dsnKZCTnpBhXUucAaVUnNUmxf4j3d-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drbpvgRXSUEDpktVfBTjAu48xxH2T"} [:p [:<> "Let's write some code using the core.async library. First, we will define our"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "worker function. It will immediately start a go block, continually take values"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "from the "] [:code [:<> "cin"]] [:<> " channel until the channel is closed, add to each of the values"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "using the "] [:code [:<> "slow+"]] [:<> " function, and finally put the resulting values on the "] [:code [:<> "cout"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channel."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drbpvgRXSUEDpktVfBTjAu48xxH2T"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn worker [cin cout]\n  (a/go-loop []\n    (when-some [val (a/<! cin)]\n      (a/>! cout (slow+ 10 val))\n      (recur))))", :nextjournal/render-opts {:loc {:line 219, :end-line 223, :column 1, :end-column 17}, :id "easy-parallellism-with-pipeline-blocking/worker-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#function[easy-parallellism-with-pipeline-blocking/worker]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/worker-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/worker-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dsv5ubZZeFkfAXMPG5367riz6TNss"} [:p [:<> "Now we need to run the worker function with the defined channels and collect"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the result."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dsv5ubZZeFkfAXMPG5367riz6TNss"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(let [cin (a/to-chan! (range 10))\n      cout (a/chan)]\n  (time\n   ;; Wait for processing to finish then close the out channel. This works\n   ;; because go-blocks return a channel that receive a single value when the\n   ;; go-block is done\n   (a/go (a/<! (worker cin cout))\n         (a/close! cout))\n   (a/<!! (a/into [] cout))))", :nextjournal/render-opts {:loc {:line 227, :end-line 235, :column 1, :end-column 30}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtzfMaoA8kDpCtzDoXnW33TULQiYb-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 1041, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 10, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 3], :nextjournal/value 13, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 4], :nextjournal/value 14, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 5], :nextjournal/value 15, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 6], :nextjournal/value 16, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 7], :nextjournal/value 17, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 8], :nextjournal/value 18, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 9], :nextjournal/value 19, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtzfMaoA8kDpCtzDoXnW33TULQiYb-result-1"}}, :nextjournal/blob-id "5dsg2oXxF4QzA2bbt1f1LUmxweg5dQ"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtzfMaoA8kDpCtzDoXnW33TULQiYb-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drk9QHa9AjNvPHaJun8aDyG754oaf"} [:p [:<> "This works, but it runs on a single thread, we don't have any parallelism yet. Let's"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "spawn some more worker functions to fix that:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drk9QHa9AjNvPHaJun8aDyG754oaf"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(let [cin (a/to-chan! (range 10))\n      cout (a/chan)]\n  (time (let [worker-chns (doall (repeatedly 3 #(worker cin cout)))]\n          ;; Wait for all channels to complete then close the out channel\n          (a/go (doseq [c worker-chns]\n                  (a/<! c))\n                (a/close! cout))\n          (a/<!! (a/into [] cout)))))", :nextjournal/render-opts {:loc {:line 239, :end-line 246, :column 1, :end-column 38}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr64yg5aFqvEa9xts3wDBFJiLJWLN-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 422, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 10, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 3], :nextjournal/value 13, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 4], :nextjournal/value 14, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 5], :nextjournal/value 15, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 6], :nextjournal/value 17, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 7], :nextjournal/value 16, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 8], :nextjournal/value 18, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 9], :nextjournal/value 19, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr64yg5aFqvEa9xts3wDBFJiLJWLN-result-1"}}, :nextjournal/blob-id "5dsrWAYn383vnaA7Njjches3mVjMPQ"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dr64yg5aFqvEa9xts3wDBFJiLJWLN-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtVn8RiKiHTVaNpCL8yNU5kRX89rV"} [:p [:<> "There we go! Much better."]] [:p [:<> "Creating and managing these worker functions, as well as correctly handling"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channels and knowing when to close them, can be a bit tricky. Luckily,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "core.async provides an excellent helper function in the form of"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "pipeline-blocking"]] [:<> "."]] [:p [:code [:<> "pipeline-blocking"]] [:<> " works with an input and an output channel, a number"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "representing the number of concurrent workers, and a transducer to apply to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the values flowing between the channels. Transducers are a feature in Clojure"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "that has great interoperability with core.async. We can connect transducers to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channels when we create a channel via the "] [:code [:<> "(async/chan buf xf)"]] [:<> " function, or we can"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "use other functions such as "] [:code [:<> "pipeline-blocking"]] [:<> " to get more control over"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "parallel execution."]] [:p [:<> "Let's rewrite the above code using "] [:code [:<> "pipeline-blocking"]] [:<> ". The first thing we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "need is a transducer. One way to define a transducer is by using the "] [:code [:<> "map"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "function without the collection argument:"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtVn8RiKiHTVaNpCL8yNU5kRX89rV"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def xf (map (partial slow+ 10)))", :nextjournal/render-opts {:loc {:line 266, :end-line 266, :column 1, :end-column 34}, :id "easy-parallellism-with-pipeline-blocking/xf-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#function[clojure.core/map/fn--5931]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/xf-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/xf-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5drwjtNh5oSuBQk1wLZJ9T223FLrrZ"} [:p [:<> "Then we create some channels and run "] [:code [:<> "pipeline-blocking"]] [:<> ":"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5drwjtNh5oSuBQk1wLZJ9T223FLrrZ"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(let [cin (a/to-chan! (range 10))\n      cout (a/chan)]\n  (time (a/pipeline-blocking 3 cout xf cin)\n        (a/<!! (a/into [] cout))))", :nextjournal/render-opts {:loc {:line 269, :end-line 272, :column 1, :end-column 35}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5drrr9GKUm8Ze4Qm1wnidnnNhC76ak-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 420, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 10, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 3], :nextjournal/value 13, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 4], :nextjournal/value 14, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 5], :nextjournal/value 15, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 6], :nextjournal/value 16, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 7], :nextjournal/value 17, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 8], :nextjournal/value 18, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 9], :nextjournal/value 19, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drrr9GKUm8Ze4Qm1wnidnnNhC76ak-result-1"}}, :nextjournal/blob-id "5dskseBbCTokErE3ao1x5tWeUqaBvW"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drrr9GKUm8Ze4Qm1wnidnnNhC76ak-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value "flowchart LR\n    source[\"(range 10)\"]-- cin -->worker[\"(pipeline-blocking 3 cout xf cin)\"]-- cout -->sink[\"[10, 11, 12, …]\"]", :nextjournal/viewer {:render-fn #viewer-fn (fn [value] (when value [nextjournal.clerk.render/with-d3-require {:package ["mermaid@8.14/dist/mermaid.js"]} (fn [mermaid] [:div {:ref (fn [el] (when el (.render mermaid (str (gensym)) value (fn* [%1] (set! (.-innerHTML el) %1)))))}])])), :hash "5drq1ZENtebfWdneaTgA6uyixDGjHz"}} {:path [0 1], :nextjournal/value [:figcaption.text-center.mt-1 [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 1 0], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "pipeline-blocking with 3 worker threads"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/col-viewer, :render-fn #viewer-fn (fn [items opts] (into [:div {:class "md:flex md:flex-col md:gap-4 clerk-grid not-prose", :style opts}] (map (fn [item] [:div.flex.items-center.justify-center (nextjournal.clerk.render/inspect-presented opts item)])) items)), :hash "5dtsrdsNS2g5pYHDNF89sKnaCQAUu8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drajWDh5oMxfzWS65XJtYv5t8zwtq-result"}}, :nextjournal/blob-id "5dtQTAnzsCffazZNVheTUGH54UXuFg"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drajWDh5oMxfzWS65XJtYv5t8zwtq-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dtDF9UYHQi49rfW1WbpRJBZHjGo81"} [:p [:<> "Let's see if we can push it a bit..."]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dtDF9UYHQi49rfW1WbpRJBZHjGo81"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(let [cin (a/to-chan! (range 500))\n      cout (a/chan)]\n  (time (a/pipeline-blocking 50 cout xf cin)\n        (a/<!! (a/into [] cout))))", :nextjournal/render-opts {:loc {:line 297, :end-line 300, :column 1, :end-column 35}, :id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtuGzkZB8Aw4zRAbvVn9Xu58BiV81-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value :duration-ms, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 0 1], :nextjournal/value 1058, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value :value, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 10, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 11, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 12, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 3], :nextjournal/value 13, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 4], :nextjournal/value 14, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 5], :nextjournal/value 15, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 6], :nextjournal/value 16, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 7], :nextjournal/value 17, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 8], :nextjournal/value 18, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 9], :nextjournal/value 19, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 10], :nextjournal/value 20, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 11], :nextjournal/value 21, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 12], :nextjournal/value 22, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 13], :nextjournal/value 23, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 14], :nextjournal/value 24, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 15], :nextjournal/value 25, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 16], :nextjournal/value 26, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 17], :nextjournal/value 27, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 18], :nextjournal/value 28, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 19], :nextjournal/value 29, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:nextjournal/value {:n 20, :path [1 1 1], :total 500, :offset 20}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtuGzkZB8Aw4zRAbvVn9Xu58BiV81-result-1"}}, :nextjournal/blob-id "5dqyAyD9qAf6Fk9h4Drnc6XWeXKwQc"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5dtuGzkZB8Aw4zRAbvVn9Xu58BiV81-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value "flowchart LR\n    source[\"(range 500)\"]-- cin -->worker[\"(pipeline-blocking 50 cout xf cin)\"]-- cout -->sink[\"[10, 11, 12, …]\"]", :nextjournal/viewer {:render-fn #viewer-fn (fn [value] (when value [nextjournal.clerk.render/with-d3-require {:package ["mermaid@8.14/dist/mermaid.js"]} (fn [mermaid] [:div {:ref (fn [el] (when el (.render mermaid (str (gensym)) value (fn* [%1] (set! (.-innerHTML el) %1)))))}])])), :hash "5drq1ZENtebfWdneaTgA6uyixDGjHz"}} {:path [0 1], :nextjournal/value [:figcaption.text-center.mt-1 [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [0 1 0], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id nil} [:p [:<> "Pipeline-blocking with 50 worker threads"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/col-viewer, :render-fn #viewer-fn (fn [items opts] (into [:div {:class "md:flex md:flex-col md:gap-4 clerk-grid not-prose", :style opts}] (map (fn [item] [:div.flex.items-center.justify-center (nextjournal.clerk.render/inspect-presented opts item)])) items)), :hash "5dtsrdsNS2g5pYHDNF89sKnaCQAUu8"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drUAJToPajTQQ3hLq4QjksxkFRW3U-result"}}, :nextjournal/blob-id "5drCyuMcxL5RLZFjXsmSJStzXVTbCT"}, :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/anon-expr-5drUAJToPajTQQ3hLq4QjksxkFRW3U-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "easy-parallellism-with-pipeline-blocking/markdown-5dr5rK1mrqjHgmWJGQQJnsk5CR6geH"} [:p [:<> "...and that's it!"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "In my view, "] [:code [:<> "pipeline-blocking"]] [:<> " offers a lot of benefits. We don't have to manage worker functions, and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "we can utilize transducers, which can be reused in many different contexts without needing knowledge"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "of the underlying data structure."]] [:p [:<> "Sometimes, we do need the extra control that custom worker functions provide, but I suspect that"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "pipeline-blocking"]] [:<> " is sufficient in many scenarios."]] [:p [:<> "You might have noticed that there are a couple of other pipeline-related"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "functions, namely "] [:code [:<> "pipeline-async"]] [:<> " and "] [:code [:<> "pipeline"]] [:<> ". The difference between"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "these is that "] [:code [:<> "pipeline-blocking"]] [:<> " and "] [:code [:<> "pipeline"]] [:<> " use "] [:code [:<> "async/thread"]] [:<> " under"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the hood, while "] [:code [:<> "pipeline-async"]] [:<> " uses "] [:code [:<> "async/go"]] [:<> ". You can see that in action"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:a {:href "https://github.com/clojure/core.async/blob/aa6b951301fbdcf5a13cdaaecb4b1a908dc8a978/src/main/clojure/clojure/core/async.clj#L548"} [:<> "here"]] [:<> "."]] [:p [:<> "The names of the functions suggest their proper usage: if you have blocking"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "operations such as blocking HTTP requests or, in our case, the "] [:code [:<> "slow+"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "function, then use "] [:code [:<> "pipeline-blocking"]] [:<> ". If you have operations that run"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "asynchronously, then you may use "] [:code [:<> "pipeline-async"]] [:<> " to take advantage of the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "core.async go block scheduler and thread pool. An example of an asynchronous"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "operation could be a function doing an HTTP request that returns immediately,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "but accepts a callback where you can put the result value on a channel in the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "callback. If you are doing compute-intensive operations, use "] [:code [:<> "pipeline"]] [:<> "."]] [:p [:<> "The reason for differentiating between these functions is because of a common"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "pitfall when using go blocks: blocking operations will starve the thread pool"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "(which has a default of 8 threads). Unlike in Golang where goroutines are"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "preempted on I/O calls and other events, this is not the case in Clojure. Go"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "blocks in Clojure are only preempted when we perform a take or put on a"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "channel. This means that a go block performing a blocking HTTP request will"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "block that thread until the operation is done. If enough of these are"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "running at the same time, the core.async thread pool for go blocks will run"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "out of threads."]] [:p [:<> "The ideal solution to such a situation is to make the HTTP request"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "asynchronously so that we can still use go blocks without starving the thread"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "pool, but a much simpler solution is to spin up dedicated threads with"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "async/thread"]] [:<> ". "] [:code [:<> "async/go"]] [:<> " and "] [:code [:<> "async/thread"]] [:<> " blocks are pretty much"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "interchangeable with the exception of some core.async functions which have"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "their own versions, such as "] [:code [:<> "async/<!!"]] [:<> " for "] [:code [:<> "async/thread"]] [:<> " blocks and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "async/<!"]] [:<> " for "] [:code [:<> "async/go"]] [:<> " blocks. Unless a very large number of threads are"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "needed, "] [:code [:<> "async/thread"]] [:<> " and "] [:code [:<> "pipeline-blocking"]] [:<> " work perfectly fine. If you"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "need several hundreds of threads, then it might be a good idea to consider"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "async/go"]] [:<> " and "] [:code [:<> "pipeline-async"]] [:<> "."]] [:p [:<> "Here is a good blog post that explores the topic a bit more:"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:a {:href "https://eli.thegreenplace.net/2017/clojure-concurrency-and-blocking-with-coreasync/"} [:<> "https://eli.thegreenplace.net/2017/clojure-concurrency-and-blocking-with-coreasync/"]]] ["h2" {:id "colophon-and-thanks"} [:<> "Colophon and thanks"]] [:p [:a {:href "https://github.com/clojure/core.async"} [:<> "clojure/core.async"]] [:<> " is made by the Clojure core team, with contributors."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "This document was written with "] [:a {:href "https://clerk.vision/"} [:<> "Clerk"]] [:<> ", by "] [:a {:href "https://nextjournal.com/"} [:<> "Nextjournal"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "The code that inspired this document was run on "] [:a {:href "https://babashka.org/"} [:<> "Babashka"]] [:<> ", by "] [:a {:href "https://www.michielborkent.nl/"} [:<> "Michiel Borkent"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "The programmers writing this documents were inspired by the Norwegian Clojure community ("] [:a {:href "https://clojurians.slack.com/archives/C061XGG1W"} [:<> "#clojure-norway on Clojurians"]] [:<> ", "] [:a {:href "https://www.meetup.com/clojure-oslo/"} [:<> "Clojure/Oslo Meetup"]] [:<> ")."]] [:p [:<> "Special thanks to Terje, who nudged the authors towards this way of thinking "] [:a {:href "https://clojurians.slack.com/archives/C061XGG1W/p1707646189467349?thread_ts=1707477511.195369&cid=C061XGG1W"} [:<> "five months prior to us writing this documents"]] [:<> "."]] [:p [:<> "This document was written by"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:a {:href "https://github.com/rubensseva"} [:<> "Ruben S. Sevaldson"]] [:<> " and "] [:a {:href "https://play.teod.eu/"} [:<> "Teodor Heggelund"]] [:<> "."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Thank you for reading!"]]], :nextjournal/render-opts {:id "easy-parallellism-with-pipeline-blocking/markdown-5dr5rK1mrqjHgmWJGQQJnsk5CR6geH"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}