:PROPERTIES:
:ID: 9c186247-2fe0-4c64-b2b8-5fc6dc110911
:END:
#+TITLE: Welcome, knowledge worker!

[[file:..][..]]

* Welcome, knowledge worker!

I hope you'll have an amazing time, do amazing work and meet amazing people.

I am a firm believer in agile movement on a solid foundation.
In an ideal world, I see people moving freely.
The static boosts the movement of the dynamic.

It's not my place to direct your movement.
But I'd like to help point your attention to the things that do not move.
Suggest how to start building a solid foundation.

* Topics: trust, value and software

So I'd like to suggest three books:

1. a book on how to build trust,
2. a book on how to provide value to others,
3. and a book on how to build software.

Why trust, value and software, exactly?

| thing    | why                                                                                |
|----------+------------------------------------------------------------------------------------|
| trust    | because relationships founded on trust is how you make things happen in the world. |
| value    | because knowing what value you provide empowers you.                               |
| software | because there are old people whose techniques you should steal.                    |

When you understand trust, value and software well, moving forward is going to be easy.
"Oh you want to learn D3.js?
You already have some foundational understanding of software.
And you know how to judge the value you provide by building something with D3.
And you have people around you that you can ask for feedback or share your work with."

In short --- understanding trust, value and software deeply is a force multiplier for other things you want to learn and do.

-----

* Trust

All your relationships with other people are characterized by trust.
You trust your closest friends.
Trust makes all other things easy.
You don't have to start from scratch each time.
It's easy to work together.
It's easy to communicate.

In certain organizations, trust is substituted for domination.
You have to do what your boss says.
Actually, I lied.
That only counts for certain relationships in the organization.
I can promise you that your domineering manager has /some/ people he trusts more than others.
If you wonder why, pay attention to /his/ attention.
Who does he trust?
Why do you think that is?

[[id:5dce2cbf-71b0-4038-ad1d-7174236fd964][Jocko Willink]] describes what you can do crisply:

#+begin_quote
If your boss isn't making a decision in a timely manner or providing necessary support for you and your team, don't blame the boss.
First, blame yourself.
Examine what you can do to better convey the critical information for decisions to be made and support allocated.

Leading up the chain of command requires tactful engagement with the immediate boss (or in military terms, higher headquarters) to obtain the decisions and support necessary to enable your team to accomplish its mission and ultimately win.
To do this, a leader must push situational awareness up the chain of command.
#+end_quote

If you can build relationships of trust to the people around you, you'll have an easy time getting help and feedback.

So, for trust, i recommend [[id:40f7d350-4adb-4a1c-bee8-70b38e8006c0][Extreme Ownership]] by Jocko Willink.
Start with /Chapter 10: Leading Up and Down the Chain of Command/ if you're in a hurry.

* Value

[[id:45f5cc28-79f9-4a88-930f-06f77e727479][Marty Cagan]]: [[id:4c96fb35-ee33-4386-b2b8-f7b80cd5d8a5][Empowered]]

* Software

[[id:4c29d9b7-617e-4178-83ca-e3c83cbd6e63][Eric Raymond]]: [[id:3aa87eb3-5ab3-4897-9057-fd463c8bd980][The Art of Unix Programming]]

-----

* Appendix A: journaling

When in doubt, ask yourself "what's important?" and start writing.

Are you asking the right question?

If it's hard, try slicing it up.

If you dare, share pieces of your learning journal with your peers.

* Appendix B: more books

more on trust & relationships:
The Courage to Be Disliked
https://www.goodreads.com/book/show/43306206-the-courage-to-be-disliked

more on programming:
The Pragmatic Programmer: Your Journey to Mastery (2nd edition)
Dave Thomas
Andy Hunt

Why: great read, actionable, will make your code better.

more on value:
The Beginning of Infinity

Why: crisply defines what's useful to do in science.
