:PROPERTIES:
:ID: 1b275a74-df8e-4ef7-a401-4f04283ef68e
:END:
#+TITLE: Remote Clerk workshop for Scicloj-adjacent people (2022-10)

[[file:..][..]]


| Clojureverse thread | [[https://clojureverse.org/t/visual-tools-meeting-14-clerk-workshop/9423][visual-tools-meeting-14-clerk-workshop/9423]] |
| Setup instructions  | [[https://github.com/nextjournal/clerk-demo/blob/workshop-202210-scicloj/workshop/setup.md][workshop-202210-scicloj/workshop/setup.md]]   |
| Slack channel       | [[https://clojurians.slack.com/archives/C046BCJMWAY][#visual-tools-meeting-14-clerk-workshop]]     |
| Zoom Link           | TBD, keep an eye on the channel ðŸ‘†          |
| Time                | 18:00-19:30 Oslo time                       |

#+begin_quote
X: Hey Teodor, I'm curious about what this is meant to be.

T: Hi :)

Just my notes for the workshop.
They are on the internet because that's easy for me, and it's easy to share with others.
And I find that writing about my process helps me learn and remember.
I believe in learning in public.

X: Okay. But it's not official or anything?

T: Nope --- just third party commentary. :)

Thank Martin and Daniel for making this happen!
#+end_quote

The amazing folks making [[id:9799d27f-49d0-414a-bb94-f611588fc85c][Clerk]] decided to host a workshop for [[id:1b1a3e02-9247-496e-b70f-2aee1251d1ff][Scicloj]]-adjacent people.

This is just my notes as we go along.
This page should probably /be/ a Clerk notebook.
But I'm not comfortable putting Clerk notebooks on [[id:0c9bef25-85ef-48e8-b4fd-d60160f177ec][play.teod.eu]] ("play") quite yet.

So this is in Org-mode - for now.
But I DEFINITELY want to be able to build play-pages with Clerk.
I just have to figure out how - and find a good why.

*Q: should I use the clerk file watcher or not?*

Sort of confusing that there's both:

1. A command to start Clerk as a file watcher
2. /and/ a nudge towards just "setting up that editor hotkey"

*A: I'll dig into my old hotkey setup and see how that works.*

Here we go, my own old clerk mess:

#+begin_src emacs-lisp
;;; teod. Key bindings
(progn
  (defun clerk-show ()
    (interactive)
    (save-buffer)
    (let ((filename (buffer-file-name)))
      (when filename
        (cider-interactive-eval
         (concat "(nextjournal.clerk/show! \"" filename "\")")))))

  (defun teod/clerk-show ()
    (interactive)
    (message "running show")
    (let
        ((filename
          (buffer-file-name)))
      (when filename
        (cider-interactive-eval
         (concat "(nextjournal.clerk/show! \"" filename "\")")))))

  (defun teod/clerk-autoshow ()
    (interactive)
    (message "RUnning autoshow")
    (add-hook 'after-save-hook 'teod/clerk-show 0 't))

  (comment
   (define-minor-mode +clerk-auto-mode
     "Minor mode for automatically showing the current buffer with clerk"
     :init-value nil
     (prog
       (teod/clerk-autoshow)
       (clojure-mode)))))

;; lots of elided stuff

(map! :g "<f8>" #'teod-play-page-find
      :g "C-S-n" #'teod/move-down-a-bit
      :g "C-S-p" #'teod/move-up-a-bit
      :g "C-s" #'consult-line
      :g "C-Ã¦" #'clerk-show
      ;; ...
      )
#+end_src

*A: I have some old stuff*.

Let's see if that old stuff "just works" with the Clerk demo material.

Also! I think I just want to fork the repo so that I can change it.
ðŸ¤”
But I also don't want more complexity than I need.
ðŸ¤”
Code is hard.

Decision: fork and have the fork ready, but run code directly in upstream repo for now.



#+BEGIN_VERSE















#+END_VERSE
