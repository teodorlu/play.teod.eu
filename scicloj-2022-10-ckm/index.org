:PROPERTIES:
:ID: 8f2d71cb-6c4a-49eb-a5a9-bbca92ad10d8
:END:
#+TITLE: Scicloj 2022-10: collective knowledge management

[[file:..][..]]

* rationale
1. I'm interested in Scicloj and collective knowledge management
2. I'm excited about my current learning process
3. So I'm going to share a bit :)
* vision
scicloj knowledge archipelago

1. easy to create knowledge
2. easy to collect and curate knowledge
3. easy to learn.
* who is this guy?
used to do civil engineering, numerical analysis of nonlinear mechanics

then software

these days product

very interested in how we can build knowledge together.

inspired by [[id:dde82bbc-e4c8-49c0-b577-dba0cba0bdf7][The Beginning of Infinity]], a book about good explanations
* demo: =play.teod.eu=
Things I could show:

1. Create a new page, and deploy it
   1. Page for Daniel, perhaps?
2. Linking to other pages
3. the =play.clj relations= CLI
   1. Optional. Kinda cool, not essential.

I'm going to emphasize "showing the whole" over "explaining how everything works".

#+begin_src shell-script
# Cheat sheet for teodor:
$ play.teod.eu-preview.sh
#+end_src
* terminology
1. [[id:0c9bef25-85ef-48e8-b4fd-d60160f177ec][play.teod.eu]] --- my knowledge playground / backyard / garden
2. [[id:f4762ab2-c1e5-4b90-9e59-be3ad6e6eafd][dbx]] --- "a collective knowledge toolkit for babashka zealots"
   1. dbx doesn't really exist outside my head (yet)

plan: put the good parts of play.teod.eu into dbx,
  refactor play.teod.eu to use dbx.
  delete code.

In other words: decouple the tool from the site.
* =play.teod.eu= tech --- "how does this work?"
(please jump in and ask questions, I'm not sure what people are interested in)

1. one folder for each document
   1. metadata in EDN files
      1. CLI for modifying metadata
   2. Embedding small HTML stuff is super easy
      1. Example: [[id:9eccb2aa-fe9a-4855-b0d3-8f89cbe1d825][Scicloj libraries and tools]]
      2. Example: the "random button" on the [[file:..][front page]]
2. no build step, HTML files in Git
3. -> potentially really fast deploy
   1. Currently 20-30 seconds, >95% of that is waiting for Cloudflare
4. A big =babashka/cli= script
5. Org-mode, org-roam and some Emacs lisp functions
   1. I don't want org-mode or emacs dependencies in dbx
6. a big generated makefile
   1. makefile generation is painful.
      It's one big string, I want data.
   2. for dbx, I want pure babashka, no makefiles.
      just use =babashka.fs/modified-since=
* scicloj knowledge archipelago
/Q: how can I learn Clojure data science?/

ğŸ¤”

=:daniel_thinking_face:= =:kira_thinking_face:=

/Q: how do we create, collect and index Clojure data science learning materials together?/

#+begin_verse
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤” ğŸ¤”
#+end_verse

(requires us thinking together :))
* current initiatives
1. [[https://github.com/scicloj/clojure-data-cookbook][clojure-data-cookbook]]
2. [[https://github.com/clojupedia/clojupedia.org][clojupedia.org]]
3. [[https://scicloj.github.io/docs/resources/libs/][scicloj.github.io/docs/resources/libs]]
* getting in touch with Teodor
async questions later?
ping me!

| https://teod.eu           | links to github, twittter, etc |
| Clojurians Slack          | @teodorlu                      |
| Clojurians Slack channels | Mostly #babashka               |

I'm really excited about this stuff.

#+BEGIN_VERSE





#+END_VERSE
